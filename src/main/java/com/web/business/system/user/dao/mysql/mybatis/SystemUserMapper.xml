<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.web.business.system.user.dao.mysql.mybatis.SystemUserMapper" >
  <resultMap id="BaseResultMap" type="com.web.business.system.user.model.SystemUser" >
    <id column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="department_id" property="departmentId" jdbcType="BIGINT" />
    <result column="user_number" property="userNumber" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="role_id" property="roleId" jdbcType="VARCHAR" />
    <result column="corp_id" property="corpId" jdbcType="BIGINT" />
    <result column="department_name" property="departmentName" jdbcType="VARCHAR" />
    <result column="department_leader" property="departmentLeader" jdbcType="VARCHAR" />
    <result column="charge_leader" property="chargeLeader" jdbcType="VARCHAR" />
    <result column="create_user_id" property="createUserId" jdbcType="VARCHAR" />
  </resultMap>
  
  
 <sql id="Base_Column_List" >
     	user_id,
     	user_name,
     	password,
     	real_name,
     	department_id,
     	user_number,
     	phone,
     	email,
     	del_flag,
     	create_time
  </sql>
  
  
  <!-- 根据主键查询用户 -->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
		<include refid="Base_Column_List" />
    from system_user 
    where  user_id = #{ userId,jdbcType=BIGINT}
  </select>
  
   <!-- 根据属性与角色表联查  -->
   <select id="selectByPrimaryKeyByRole" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		su.user_id,
		su.user_name,
		su.password,
		su.real_name,
		su.department_id,
		su.user_number,
		su.phone,
		su.email,
		su.del_flag,
		su.create_time,
		su.department_leader,
		su.charge_leader,
		group_concat(concat(sr.role_id,'')) as role_id,
		group_concat(sr.role_name) as role_name
		from system_user su  
		left join system_user_role_ra sura on su.user_id=sura.user_id 
		left join system_role sr on sura.role_id=sr.role_id 
		where 1=1 
		AND su.del_flag = 0
	    AND su.user_id =  #{ userId,jdbcType= VARCHAR }
		group by su.user_id
	</select>
  
  <!-- 根据主键删除用户（物理删除） -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from system_user 
    where user_id =  #{ userId,jdbcType=BIGINT}
  </delete>
  
  <!-- 根据主键删除用户（逻辑删除） -->
	<update id="deleteLogicByPrimaryKey" parameterType="java.lang.Long">
			update system_user
			<set>
     			 del_flag =  1
			</set>
			where user_id =  #{ userId,jdbcType=BIGINT}
	</update>
  
  <!-- 根据主键集合删除用户（物理删除） -->
  <delete id="deleteBatchByPrimaryKey" parameterType="java.util.List" >
    delete from system_user
    where user_id in
    <foreach collection="list" item="userId" index="index"
            open="(" close=")" separator=",">
             #{ userId,jdbcType=BIGINT}
    </foreach>
  </delete>
  
    <!-- 根据主键集合删除用户（逻辑删除） -->
	<update id="deleteLogicBatchByPrimaryKey" parameterType="java.util.List">
			update system_user
			<set>
     			 del_flag =  1
			</set>
			 where user_id in
    <foreach collection="list" item="userId" index="index"
            open="(" close=")" separator=",">
             #{ userId,jdbcType=BIGINT}
    </foreach>
	</update>
  
  <!-- 添加用户  -->
	<insert id="insertSelective" parameterType="com.web.business.system.user.model.SystemUser">
		insert into system_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				user_id,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="realName != null">
				real_name,
			</if>
			<if test="departmentId != null">
				department_id,
			</if>
			<if test="userNumber != null">
				user_number,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="delFlag != null">
				del_flag,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="departmentLeader != null">
				department_leader,
			</if>
			<if test="chargeLeader != null">
				charge_leader,
			</if>
			<if test="createUserId != null">
				create_user_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				 #{ userId,jdbcType= VARCHAR },
			</if>
			<if test="userName != null">
				 #{ userName,jdbcType= VARCHAR },
			</if>
			<if test="password != null">
				 #{ password,jdbcType= VARCHAR },
			</if>
			<if test="realName != null">
				 #{ realName,jdbcType= VARCHAR },
			</if>
			<if test="departmentId != null">
				 #{ departmentId,jdbcType= BIGINT },
			</if>
			<if test="userNumber != null">
				 #{ userNumber,jdbcType= VARCHAR },
			</if>
			<if test="phone != null">
				 #{ phone,jdbcType= VARCHAR },
			</if>
			<if test="email != null">
				 #{ email,jdbcType= VARCHAR },
			</if>
			<if test="delFlag != null">
				 #{ delFlag,jdbcType= INTEGER },
			</if>
			<if test="createTime != null">
				 #{ createTime,jdbcType= VARCHAR },
			</if>
			<if test="departmentLeader != null">
				 #{ departmentLeader,jdbcType= VARCHAR },
			</if>
			<if test="chargeLeader != null">
				 #{ chargeLeader,jdbcType= VARCHAR },
			</if>
			<if test="createUserId != null">
				 #{ createUserId,jdbcType= VARCHAR },
			</if>
		</trim>
		<selectKey resultType="java.lang.Long" order="AFTER"
			keyProperty="userId">
			SELECT LAST_INSERT_ID() AS user_id
		</selectKey>
	</insert>
   
    <!-- 根据属性分页查询  -->
   <select id="selectByPropertyByPage" resultMap="BaseResultMap"
		parameterType="Map">
		select
		<include refid="Base_Column_List" />
		from system_user
		where 1=1
		  <if test="userId != null">
			AND user_id =  #{ userId,jdbcType= VARCHAR }
		  </if>
		  <if test="userName != null">
			AND user_name =  #{ userName,jdbcType= VARCHAR }
		  </if>
		  <if test="password != null">
			AND password =  #{ password,jdbcType= VARCHAR }
		  </if>
		  <if test="realName != null">
			AND real_name like  "%"#{ realName,jdbcType= VARCHAR }"%"
		  </if>
		  <if test="departmentId != null">
			AND department_id =  like  "%"#{ departmentId,jdbcType= VARCHAR }"%"
		  </if>
		  <if test="userNumber != null">
			AND user_number =  #{ userNumber,jdbcType= VARCHAR }
		  </if>
		  <if test="phone != null">
			AND phone =  like  "%"#{ phone,jdbcType= VARCHAR }"%"
		  </if>
		  <if test="email != null">
			AND email =  #{ email,jdbcType= VARCHAR }
		  </if>
		  <if test="userType != null">
			AND user_type like  "%"#{ userType,jdbcType= INTEGER }"%"
		  </if>
		  <if test="delFlag != null">
			AND del_flag =  #{ delFlag,jdbcType= INTEGER }
		  </if>
		  <if test="createTime != null">
			AND create_time =  #{ createTime,jdbcType= VARCHAR }
		  </if>
		ORDER BY user_id desc
		<if test="startindex!=null and maxindex!=null">
		 	limit #{startindex},#{maxindex} 
		</if>
	</select>
	
	 <!-- 根据属性分页查询(只查询未逻辑删除且对应该用户类型的记录) -->
   <select id="selectByPropertyByPageByOthers" resultMap="BaseResultMap"
		parameterType="Map">
		select
		<include refid="Base_Column_List" />
		from system_user 
		where 1=1 
		AND del_flag = 0
		  <if test="userId != null">
			AND user_id =  #{ userId,jdbcType= VARCHAR }
		  </if>
		  <if test="userName != null">
			AND user_name LIKE CONCAT(CONCAT('%', #{ userName,jdbcType= VARCHAR }),'%') 
		  </if>
		  <if test="password != null">
			AND password =  #{ password,jdbcType= VARCHAR }
		  </if>
		  <if test="realName != null">
			AND real_name LIKE CONCAT(CONCAT('%', #{ realName,jdbcType= VARCHAR }),'%') 
		  </if>
		  <if test="departmentId != null">
			AND department_id =  #{ departmentId,jdbcType= BIGINT }
		  </if>
		  <if test="userNumber != null">
			AND user_number =  #{ userNumber,jdbcType= VARCHAR }
		  </if>
		  <if test="phone != null">
			AND phone =  #{ phone,jdbcType= VARCHAR }
		  </if>
		  <if test="email != null">
			AND email =  #{ email,jdbcType= VARCHAR }
		  </if>
		  <if test="userType != null">
			AND user_type =  #{ userType,jdbcType= INTEGER }
		  </if>
		  <if test="createTime != null">
			AND create_time =  #{ createTime,jdbcType= VARCHAR }
		  </if>
		ORDER BY user_id desc
		<if test="startindex!=null and maxindex!=null">
		 	limit #{startindex},#{maxindex} 
		</if>
	</select>
	
	 <!-- 根据属性与角色表联查 分页查询(只查询未逻辑删除且对应该用户类型的记录) -->
   <select id="selectByPropertyByPageByOthersByRole" resultMap="BaseResultMap"
		parameterType="Map">
		select
		su.user_id,
		su.user_name,
		su.password,
		su.real_name,
		su.department_id,
		su.user_number,
		su.phone,
		su.email,
		su.del_flag,
		su.create_time,
		su.department_leader,
		su.charge_leader,
		group_concat(sr.role_name) as role_name
		from system_user su  
		left join system_user_role_ra sura on su.user_id=sura.user_id 
		left join system_role sr on sura.role_id=sr.role_id 
		where 1=1 
		AND su.del_flag = 0
        <if test="createUserId != null">
		AND (su.create_user_id = #{ userId,jdbcType= BIGINT } or su.user_id =  #{ userId,jdbcType= VARCHAR })
		</if>
		  <if test="userName != null">
			AND su.user_name LIKE CONCAT(CONCAT('%', #{ userName,jdbcType= VARCHAR }),'%') 
		  </if>
		  <if test="password != null">
			AND su.password =  #{ password,jdbcType= VARCHAR }
		  </if>
		  <if test="realName != null">
			AND real_name LIKE CONCAT(CONCAT('%', #{ realName,jdbcType= VARCHAR }),'%') 
		  </if>
		  <if test="departmentId != null">
			AND su.department_id =  #{ departmentId,jdbcType= BIGINT }
		  </if>
		  <if test="userNumber != null">
			AND su.user_number =  #{ userNumber,jdbcType= VARCHAR }
		  </if>
		  <if test="phone != null">
			AND su.phone =  #{ phone,jdbcType= VARCHAR }
		  </if>
		  <if test="email != null">
			AND su.email =  #{ email,jdbcType= VARCHAR }
		  </if>
		  <if test="createTime != null">
			AND su.create_time =  #{ createTime,jdbcType= VARCHAR }
		  </if>
		group by su.user_id
		ORDER BY su.user_id desc
		<if test="startindex!=null and maxindex!=null">
		 	limit #{startindex},#{maxindex} 
		</if>
	</select>
	
	<!-- 根据属查询记录条数 -->
	 <select id="selectCountByProperty"  resultType="java.lang.Integer"
		parameterType="Map">
		select
		count(1)
		from system_user
		where 1=1
		  <if test="userId != null">
			AND user_id =  #{ userId,jdbcType= VARCHAR }
		  </if>
		  <if test="userName != null">
			AND user_name =  #{ userName,jdbcType= VARCHAR }
		  </if>
		  <if test="password != null">
			AND password =  #{ password,jdbcType= VARCHAR }
		  </if>
		  <if test="realName != null">
			AND real_name =  #{ realName,jdbcType= VARCHAR }
		  </if>
		  <if test="departmentId != null">
			AND department_id =  #{ departmentId,jdbcType= BIGINT }
		  </if>
		  <if test="userNumber != null">
			AND user_number =  #{ userNumber,jdbcType= VARCHAR }
		  </if>
		  <if test="phone != null">
			AND phone =  #{ phone,jdbcType= VARCHAR }
		  </if>
		  <if test="email != null">
			AND email =  #{ email,jdbcType= VARCHAR }
		  </if>
		  <if test="delFlag != null">
			AND del_flag =  #{ delFlag,jdbcType= INTEGER }
		  </if>
		  <if test="createTime != null">
			AND create_time =  #{ createTime,jdbcType= VARCHAR }
		  </if>
	</select>
	
		<!-- 根据属查询记录条数（只查询未逻辑删除且对应该用户类型的记录） -->
	 <select id="selectCountByPropertyByOthers"  resultType="java.lang.Integer"
		parameterType="Map">
		 select
		 count(1)
		 from
         system_user su 
		 where 1=1
		 AND del_flag = 0
          <if test="createUserId != null">
		  AND (su.create_user_id = #{ userId,jdbcType= BIGINT } or su.user_id =  #{ userId,jdbcType= VARCHAR })
		  </if>
		  <if test="userName != null">
			AND user_name LIKE CONCAT(CONCAT('%', #{ userName,jdbcType= VARCHAR }),'%') 
		  </if>
		  <if test="password != null">
			AND password =  #{ password,jdbcType= VARCHAR }
		  </if>
		  <if test="realName != null">
			AND real_name LIKE CONCAT(CONCAT('%', #{ realName,jdbcType= VARCHAR }),'%') 
		  </if>
		  <if test="departmentId != null">
			AND department_id =  #{ departmentId,jdbcType= BIGINT }
		  </if>
		  <if test="userNumber != null">
			AND user_number =  #{ userNumber,jdbcType= VARCHAR }
		  </if>
		  <if test="phone != null">
			AND phone =  #{ phone,jdbcType= VARCHAR }
		  </if>
		  <if test="email != null">
			AND email =  #{ email,jdbcType= VARCHAR }
		  </if>
		  <if test="createTime != null">
			AND create_time =  #{ createTime,jdbcType= VARCHAR }
		  </if>
	</select>
	
	<!-- 根据主键编辑用户信息 -->
	<update id="updateByPrimaryKeySelective" parameterType="com.web.business.system.user.model.SystemUser">
		<if test="userId !=null">
			update system_user
			<set>
     			 user_id =  #{ userId,jdbcType= VARCHAR },
     			 user_name =  #{ userName,jdbcType= VARCHAR },
     			 password =  #{ password,jdbcType= VARCHAR },
     			 real_name =  #{ realName,jdbcType= VARCHAR },
     			 department_id =  #{ departmentId,jdbcType= BIGINT },
     			 user_number =  #{ userNumber,jdbcType= VARCHAR },
     			 phone =  #{ phone,jdbcType= VARCHAR },
     			 email =  #{ email,jdbcType= VARCHAR },
     			 del_flag =  #{ delFlag,jdbcType= INTEGER },
     			 create_time =  #{ createTime,jdbcType= VARCHAR },
     			 department_leader =  #{ departmentLeader,jdbcType= VARCHAR },
     			 charge_leader =  #{ chargeLeader,jdbcType= VARCHAR }
			</set>
			where user_id =  #{ userId,jdbcType=BIGINT}
		</if>
	</update>
	
		<!-- 根据主键编辑用户信息 -->
	<update id="updateByUserNameSelective" parameterType="com.web.business.system.user.model.SystemUser">
		<if test="userName !=null">
			update system_user
			<set>
     			 del_flag =  #{ delFlag,jdbcType= INTEGER }
			</set>
			where user_name =  #{ userName,jdbcType=BIGINT}
			
		</if>
	</update>
	
			<!-- 根据主键重置密码 -->
	<update id="updateByUserId" parameterType="com.web.business.system.user.model.SystemUser">
           update system_user su inner join (
			select
			su.user_id
			from
			corp_info ci left join corp_user_ra cur
			on ci.corp_id=cur.corp_id left join system_user su
			on cur.user_id=su.user_id
			where ci.corp_id=#{ corpId,jdbcType=BIGINT}
			and su.user_id=su.create_user_id
			) suu on su.user_id=suu.user_id
			set su.password=123
	</update>
	
	 <!-- 审核前查询用户 -->
  <select id="selectUserByUserName" parameterType="com.web.business.system.user.model.SystemUser" resultMap="BaseResultMap" >
  	    select 
		su.user_id,
		su.user_name,
		su.password,
		su.real_name,
		su.department_id,
		su.user_number,
		su.phone,
		su.email,
		su.del_flag,
		su.create_time,
		su.department_leader,
		su.charge_leader
		from corp_info ci left join corp_user_ra cur
		on ci.corp_id = cur.corp_id 
		left join system_user su on su.user_id = cur.user_id
		where ci.corp_id = #{ corpId,jdbcType= VARCHAR }
		and ci.corp_name = su.user_name
  	</select>
	
  <!-- 根据用户名密码查询用户 -->
  <select id="selectUserByPwd" parameterType="com.web.business.system.user.model.SystemUser" resultMap="BaseResultMap" >
  	   select
		su.user_id,
		su.user_name,
		su.password,
		su.real_name,
		su.department_id,
		su.create_user_id,
		su.user_number,
		su.phone,
		su.email,
		su.del_flag,
		su.create_time,
		su.department_leader,
		su.charge_leader,
		group_concat(sr.role_name) as role_name
		from system_user su  
		left join system_user_role_ra sura on su.user_id=sura.user_id 
		left join system_role sr on sura.role_id=sr.role_id 
		where 1=1 
		 AND su.user_name =  #{ userName,jdbcType= VARCHAR }
		 AND su.password =  #{ password,jdbcType= VARCHAR }
		 AND del_flag = 0
		 group by su.user_id
  	</select>  	
  	
</mapper>