			var grid_data = [];
			
			getHistoryTaskGrid();
			/**
			 从后台读取终端数据，并加载jqjrid表格
			*/
			 function getHistoryTaskGrid() {
			    	jQuery(function($) {
						$(window).resize(function(){   
				        	$("#grid-table1").setGridWidth($(window).width());
				        });
						
						var grid_selector = "#grid-table1";
						var pager_selector = "#grid-pager1";
						jQuery(grid_selector).jqGrid({						
							//扩展配置项,是否开启顶部工具栏
							topToolbar:true,
							//扩展配置项,jqGrid顶部工具栏ID,此id必须唯一，在创建顶部工具栏时，将会使用此ID
							topToolbarId:'grid-table-top-toolbar',
							url:"/ZHRJSystem/historyTask/list", //这是数据的请求地址 
							mtype: 'POST',
							datatype: "json", //将这里改为使用JSON数据
							ajaxEditOptions: {contentType: 'application/json; charset=utf-8'},
							height: "100%",
							colNames:['编号', '任务类型','时间',  '用户名', '任务内容', '任务描述', '发送方', '接收方', '发送类型'],
							colModel:[
								{name:'taskId', index:'taskId', sorttype:"int",  hidden:true},			//, hidden:true
								{name:'taskType', index:'taskType', width:100, fixed:true, resize:false, sortable:true, editable: true},
								{name:'startTime', index:'startTime', width:230, fixed:true, resize:false, sortable:true, editable: true},												
								{name:'taskName', index:'taskName', width:100, fixed:true, resize:false, sortable:true, editable: true},	
								{name:'taskContent', index:'taskContent', width:240, fixed:true, resize:false, sortable:true, editable: true},
								{name:'taskDescription', index:'taskDescription', width:150, fixed:true, resize:false, sortable:true, editable: true},
								{name:'taskSender', index:'taskSender', width:80, fixed:true, resize:false, sortable:true, editable: true},
								{name:'taskReceiver', index:'taskReceiver', width:80, fixed:true, resize:false, sortable:true, editable: true},
								{name:'taskSendType', index:'taskSendType', width:70, fixed:true, resize:false, sortable:true, editable: true}
								
								],
		                                       
					        rownumbers: true,
							viewrecords: true,
							rowNum: 5,
							rowList: [5,10,15],
							jsonReader: {  
								root:"rows", page:"page", total:"total",
								records:"records", repeatitems:false, id:"taskId"
							},
							pager: pager_selector,
							altRows: true,
							prmNames: {
								page:"page",
								rows:"rows",
								oper:"oper",
								clearoper:"clear",
								deloper:"del",
							},
																	
							multiselect: false,	///取消复选框				
					        multiboxonly: true,
							loadComplete : function() {
								$(grid_selector).closest(".ui-jqgrid-bdiv").css({ 'overflow-y' : 'scroll' });
								$(grid_selector).closest(".ui-jqgrid-bdiv").css({ 'overflow-x' : 'scroll' });
								
								var table = this;
								setTimeout(function(){
									styleCheckbox(table);
									
									updateActionIcons(table);
									updatePagerIcons(table);
									enableTooltips(table);
								}, 0);
							},						
							caption: "历史任务管理",
							autowidth: true
						});
						
			    	 });
						
						
						function aceSwitch( cellvalue, options, cell ) {
							setTimeout(function(){
								$(cell) .find('input[type=checkbox]')
										.wrap('<label class="inline" />')
									.addClass('ace ace-switch ace-switch-5')
									.after('<span class="lbl"></span>');
							}, 0);
						}
						//enable datepicker
						function pickDate( cellvalue, options, cell ) {
							setTimeout(function(){
								$(cell) .find('input[type=text]')
										.datepicker({format:'yyyy-mm-dd' , autoclose:true}); 
							}, 0);
						}
					function style_edit_form(form) {
							//enable datepicker on "sdate" field and switches for "stock" field
							form.find('input[name=sdate]').datepicker({format:'yyyy-mm-dd' , autoclose:true})
								.end().find('input[name=stock]')
									  .addClass('ace ace-switch ace-switch-5').wrap('<label class="inline" />').after('<span class="lbl"></span>');
					
							//update buttons classes
							var buttons = form.next().find('.EditButton .fm-button');
							buttons.addClass('btn btn-sm').find('[class*="-icon"]').remove();//ui-icon, s-icon
							buttons.eq(0).addClass('btn-primary').prepend('<i class="icon-ok"></i>');
							buttons.eq(1).prepend('<i class="icon-remove"></i>')
							
							buttons = form.next().find('.navButton a');
							buttons.find('.ui-icon').remove();
							buttons.eq(0).append('<i class="icon-chevron-left"></i>');
							buttons.eq(1).append('<i class="icon-chevron-right"></i>');		
						}
					
						function style_delete_form(form) {
							var buttons = form.next().find('.EditButton .fm-button');
							buttons.addClass('btn btn-sm').find('[class*="-icon"]').remove();//ui-icon, s-icon
							buttons.eq(0).addClass('btn-danger').prepend('<i class="icon-trash"></i>');
							buttons.eq(1).prepend('<i class="icon-remove"></i>');
						}
						
						function style_search_filters(form) {
							form.find('.delete-rule').val('X');
							form.find('.add-rule').addClass('btn btn-xs btn-primary');
							form.find('.add-group').addClass('btn btn-xs btn-success');
							form.find('.delete-group').addClass('btn btn-xs btn-danger');
						}
						function style_search_form(form) {
							var dialog = form.closest('.ui-jqdialog');
							var buttons = dialog.find('.EditTable')
							buttons.find('.EditButton a[id*="_reset"]').addClass('btn btn-sm btn-info').find('.ui-icon').attr('class', 'icon-retweet');
							buttons.find('.EditButton a[id*="_query"]').addClass('btn btn-sm btn-inverse').find('.ui-icon').attr('class', 'icon-comment-alt');
							buttons.find('.EditButton a[id*="_search"]').addClass('btn btn-sm btn-purple').find('.ui-icon').attr('class', 'icon-search');
						}
						
						function beforeDeleteCallback(e) {
							var form = $(e[0]);
							if(form.data('styled')) return false;
							
							form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
							style_delete_form(form);
							
							form.data('styled', true);
						}
						
						function beforeEditCallback(e) {
							var form = $(e[0]);
							form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
							style_edit_form(form);
						}
									
						function styleCheckbox(table) {
						
						}
					
						//unlike navButtons icons, action icons in rows seem to be hard-coded
						//you can change them like this in here if you want
						function updateActionIcons(table) {
							
						}
						
						//replace icons with FontAwesome icons like above
						function updatePagerIcons(table) {
							var replacement = 
							{
								'ui-icon-seek-first' : 'icon-double-angle-left bigger-140',
								'ui-icon-seek-prev' : 'icon-angle-left bigger-140',
								'ui-icon-seek-next' : 'icon-angle-right bigger-140',
								'ui-icon-seek-end' : 'icon-double-angle-right bigger-140'
							};
							$('.ui-pg-table:not(.navtable) > tbody > tr > .ui-pg-button > .ui-icon').each(function(){
								var icon = $(this);
								var $class = $.trim(icon.attr('class').replace('ui-icon', ''));
								
								if($class in replacement) icon.attr('class', 'ui-icon '+replacement[$class]);
							})
						}
					
						function enableTooltips(table) {
							$('.navtable .ui-pg-button').tooltip({container:'body'});
							$(table).find('.ui-pg-div').tooltip({container:'body'});
						}
						
				
		}	    	
				    
				