		
			var grid_data = [];
			getTaskListGrid();
			/**
			 从后台读取终端数据，并加载jqjrid表格
			*/
		    function getTaskListGrid() {
		    	jQuery(function($) {
					$(window).resize(function(){   
			        	$("#grid-table").setGridWidth($(window).width());
			        });
					
					var grid_selector = "#grid-table";
					var pager_selector = "#grid-pager";
					jQuery(grid_selector).jqGrid({						
						
						url:"/ZHRJSystem/taskList/list", //这是数据的请求地址 
						mtype: 'POST',
						datatype: "json", //将这里改为使用JSON数据
						//postData: {queryBuilder:queryBuilder},
						ajaxEditOptions: {contentType: 'application/json; charset=utf-8'},
						height: "100%",
						colNames:['编号', '时间' , '发送方' ,'接收方','类型', '内容'],
						colModel:[
							{name:'id', index:'id', sorttype:"int",  hidden:true},			//, hidden:true
							{name:'startTime', index:'startTime', width:200, fixed:true, resize:false, sortable:true, editable: true, searchoptions:{sopt:['cn']}},	
							{name:'sender', index:'sender', width:200, fixed:true, resize:false, sortable:true, editable:true},
							{name:'receiver', index:'receiver', width:200, fixed:true, resize:false, sortable:true, editable:true},
							{name: 'type', index: 'type', width:150, fixed:true, resize:false, sortable:true, editable: true},
							{name: 'content', index: 'content', width:290, fixed:true, resize:false, sortable:true, editable: true},
							],
							             
				        rownumbers: true,
						viewrecords: true,
						rowNum: 5,
						rowList: [5,10,15],
						jsonReader: {  
							root:"rows", page:"page", total:"total",
							records:"records", repeatitems:false, id:"id"
						},
						pager: pager_selector,
						altRows: true,
						prmNames: {
							page:"page",
							rows:"rows",
							oper:"oper",
							editoper:"edit",
							addoper:"add",
							deloper:"del",
						},
																
						multiselect: false,	///取消复选框			
				        multiboxonly: true,
						loadComplete : function() {
							$(grid_selector).closest(".ui-jqgrid-bdiv").css({ 'overflow-y' : 'scroll' });
							$(grid_selector).closest(".ui-jqgrid-bdiv").css({ 'overflow-x' : 'scroll' });
							
							var table = this;
							setTimeout(function(){
								styleCheckbox(table);
								
								updateActionIcons(table);
								updatePagerIcons(table);
								enableTooltips(table);
							}, 0);
						},						
						caption: "待执行任务",
						autowidth: true
					});
		    });
		    
		    
		    	function aceSwitch( cellvalue, options, cell ) {
					setTimeout(function(){
						$(cell) .find('input[type=checkbox]')
								.wrap('<label class="inline" />')
							.addClass('ace ace-switch ace-switch-5')
							.after('<span class="lbl"></span>');
					}, 0);
				}
				//enable datepicker
				function pickDate( cellvalue, options, cell ) {
					setTimeout(function(){
						$(cell) .find('input[type=text]')
								.datepicker({format:'yyyy-mm-dd' , autoclose:true}); 
					}, 0);
				}
			function style_edit_form(form) {
					//enable datepicker on "sdate" field and switches for "stock" field
					form.find('input[name=sdate]').datepicker({format:'yyyy-mm-dd' , autoclose:true})
						.end().find('input[name=stock]')
							  .addClass('ace ace-switch ace-switch-5').wrap('<label class="inline" />').after('<span class="lbl"></span>');
			
					//update buttons classes
					var buttons = form.next().find('.EditButton .fm-button');
					buttons.addClass('btn btn-sm').find('[class*="-icon"]').remove();//ui-icon, s-icon
					buttons.eq(0).addClass('btn-primary').prepend('<i class="icon-ok"></i>');
					buttons.eq(1).prepend('<i class="icon-remove"></i>')
					
					buttons = form.next().find('.navButton a');
					buttons.find('.ui-icon').remove();
					buttons.eq(0).append('<i class="icon-chevron-left"></i>');
					buttons.eq(1).append('<i class="icon-chevron-right"></i>');		
				}
			
				function style_delete_form(form) {
					var buttons = form.next().find('.EditButton .fm-button');
					buttons.addClass('btn btn-sm').find('[class*="-icon"]').remove();//ui-icon, s-icon
					buttons.eq(0).addClass('btn-danger').prepend('<i class="icon-trash"></i>');
					buttons.eq(1).prepend('<i class="icon-remove"></i>');
				}
				
				function style_search_filters(form) {
					form.find('.delete-rule').val('X');
					form.find('.add-rule').addClass('btn btn-xs btn-primary');
					form.find('.add-group').addClass('btn btn-xs btn-success');
					form.find('.delete-group').addClass('btn btn-xs btn-danger');
				}
				function style_search_form(form) {
					var dialog = form.closest('.ui-jqdialog');
					var buttons = dialog.find('.EditTable')
					buttons.find('.EditButton a[id*="_reset"]').addClass('btn btn-sm btn-info').find('.ui-icon').attr('class', 'icon-retweet');
					buttons.find('.EditButton a[id*="_query"]').addClass('btn btn-sm btn-inverse').find('.ui-icon').attr('class', 'icon-comment-alt');
					buttons.find('.EditButton a[id*="_search"]').addClass('btn btn-sm btn-purple').find('.ui-icon').attr('class', 'icon-search');
				}
				
				function beforeDeleteCallback(e) {
					var form = $(e[0]);
					if(form.data('styled')) return false;
					
					form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
					style_delete_form(form);
					
					form.data('styled', true);
				}
				
				function beforeEditCallback(e) {
					var form = $(e[0]);
					form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
					style_edit_form(form);
				}
							
				function styleCheckbox(table) {
				
				}
			
				//unlike navButtons icons, action icons in rows seem to be hard-coded
				//you can change them like this in here if you want
				function updateActionIcons(table) {
					
				}
				
				//replace icons with FontAwesome icons like above
				function updatePagerIcons(table) {
					var replacement = 
					{
						'ui-icon-seek-first' : 'icon-double-angle-left bigger-140',
						'ui-icon-seek-prev' : 'icon-angle-left bigger-140',
						'ui-icon-seek-next' : 'icon-angle-right bigger-140',
						'ui-icon-seek-end' : 'icon-double-angle-right bigger-140'
					};
					$('.ui-pg-table:not(.navtable) > tbody > tr > .ui-pg-button > .ui-icon').each(function(){
						var icon = $(this);
						var $class = $.trim(icon.attr('class').replace('ui-icon', ''));
						
						if($class in replacement) icon.attr('class', 'ui-icon '+replacement[$class]);
					})
				}
			
				function enableTooltips(table) {
					$('.navtable .ui-pg-button').tooltip({container:'body'});
					$(table).find('.ui-pg-div').tooltip({container:'body'});
				}
				
		
}	    	
		    
		   